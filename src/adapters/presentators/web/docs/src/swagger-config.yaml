openapi: "3.0.0"
info:
  version: "0.0.1"
  title: "Wether-Service API"
  description: "External Wether-Service API documentation"
# servers:
#   - url: "http://<host>/"
#   - description: "Identity Wether-Service API"
components:
  schemas:
    Temperature:
      type: object
      properties:
        time:
          type: string
          example: "0000-01-01T11:00:00.000Z"
        temperature:
          type: number
          format: float
          example: 21.9

    DayWether:
      type: object
      properties:
        date:
          type: string
          example: "2024-05-20T00:00:00.000Z"
        location:
          $ref: '#components/schemas/Location'
          description: OpenStreetMap lacation.
        temperatures:
          type: array
          items:
            $ref: '#components/schemas/Temperature'
    
    Location:
      type: object
      properties:
        id: 
          type: integer
          example: 1430616
        type: 
          type: string
          example: "city"
        name:
          type: string
          example: "Красноярск"
        latitude:
          type: number
          format: float
          example: 56
        longitude:
          type: number
          format: float
          example: 92.8

#   securitySchemes:
#     identity_server_auth:
#       type: oauth2
#       flows:
#         implicit:
#           authorizationUrl: "https://demo.identityserver.io/connect/authorize"
#           scopes:
#             api: "api"
# security:
#   - identity_server_auth:
#     - api
paths:
  /wether:
    get:
      tags:
        - wether
      summary: "Get the temperature for a few days at about 14:00 Moscow time by location"
      parameters:
        - name: lat
          in: query
          description: The place latitude
          required: true
          schema:
            type: number
            format: float
            example: 10
        - name: lon
          in: query
          description: The place langitude
          required: true
          schema:
            type: number
            format: float
            example: 10
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/DayWether'
        400: 
          description: "Bad request"
          

  /wether/moscow:
    get:
      tags:
        - wether/moscow
      summary: "Get the Moscow temperature for a few days at about 14:00 Moscow time"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/DayWether'
        400: 
          description: "Bad request"

  /location:
    get:
      tags: 
        - location
      summary: "Get location by id"
      parameters:
        - name: id
          in: query
          description: OpenStreetMap Id of the place
          required: true
          schema: 
            type: integer
            example: 1430616
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        400: 
          description: "Bad request"
          
  /location/find_by_coordinate:
    get:
      tags: 
        - location
      summary: "Get location by coordinate"
      parameters:
        - name: lat
          in: query
          description: latitude
          required: true
          schema: 
            type: number
            format: float
            example: 56
        - name: lon
          in: query
          description: longitude
          required: true
          schema: 
            type: number
            format: float
            example: 92.8
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        400: 
          description: "Bad request"
          

  /location/find:
    get:
      tags: 
        - location
      summary: "Find locations by name"
      parameters:
        - name: name
          in: query
          description: Readeble settlement name
          required: true
          schema: 
            type: string
            example: "Красноярск"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Location'
        400: 
          description: "Bad request"